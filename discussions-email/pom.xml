<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
    <artifactId>discussions</artifactId>
    <groupId>net.malariagen.alfresco</groupId>
    <version>0.0.4</version>
  </parent>
    <groupId>net.malariagen.alfresco</groupId>
    <artifactId>discussions-email</artifactId>
    <version>0.0.4</version>
    <name>discussions-email Platform Jar Module</name>
    <description>Email customizations to support discussions enhancements</description>
    <packaging>jar</packaging>

    <!-- This will import the dependencyManagement for all artifacts in the selected Alfresco platform.
            NOTE: You still need to define dependencies in your POM,
            but you can omit version as it's enforced by this dependencyManagement.
            NOTE: It defaults to the latest version this SDK pom has been tested with,
            but alfresco version can/should be overridden in your project's pom
    -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${alfresco.groupId}</groupId>
                <artifactId>alfresco-platform-distribution</artifactId>
                <version>${alfresco.platform.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

	<dependencies>
		<!-- The main Alfresco Repo dependency for compiling Java code in src/main/java -->
		<dependency>
			<groupId>${alfresco.groupId}</groupId>
			<artifactId>alfresco-repository</artifactId>
		</dependency>
		<dependency>
			<groupId>${alfresco.groupId}</groupId>
			<artifactId>alfresco-repository</artifactId>
			<version>${alfresco.platform.version}</version>
			<classifier>tests</classifier>
			<scope>test</scope>
		</dependency>
		
		      <!-- Enables JUnit remote testing (using JRebel) -->
       <dependency>
            <groupId>com.tradeshift</groupId>
            <artifactId>junit-remote</artifactId>
            <version>3</version>
            <type>jar</type>
            <exclusions>
                <exclusion>
                    <artifactId>servlet-api</artifactId>
                    <groupId>javax.servlet</groupId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
       </dependency>

       <!-- Required to have annotation based remote testing working -->
       <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>3.2.14.RELEASE</version>
            <type>jar</type>
            <scope>test</scope>
       </dependency>

       <dependency>
       	<groupId>${project.groupId}</groupId>
       	<artifactId>discussions-platform-jar</artifactId>
       	<version>${project.version}</version>
       	<scope>compile</scope>
       </dependency>
	</dependencies>

    <build>
        <plugins>
            <!--
                The Alfresco Maven Plugin contains all the logic to run the extension
                in an embedded Tomcat with the H2 database.
                -->
            <plugin>
                <groupId>org.alfresco.maven.plugin</groupId>
                <artifactId>alfresco-maven-plugin</artifactId>
                <version>${alfresco.sdk.version}</version>
                <configuration>
                    <!-- Default is to run with a Community edition, change to 'enterprise' if using Enterprise edition -->
                    <alfrescoEdition>community</alfrescoEdition>

                    <!-- We need the flat file H2 database to run the Repo -->
                    <enableH2>true</enableH2>
                    <!-- This is a platform extension JAR, so we need the platform webapp (alfresco.war) -->
                    <enablePlatform>true</enablePlatform>
                    <!-- Enable Solr so we can use search, our Repo extension probably need search -->
                    <enableSolr>true</enableSolr>
                    <!-- We don't need the share.war if we don't have any UI extensions -->
                    <enableShare>false</enableShare>

                    <!--
                       JARs and AMPs that should be overlayed/applied to the Platform/Repository WAR
                       (i.e. alfresco.war)
                       -->
                    <platformModules>
                        <!-- This AMP is needed if we are going to access the platform webapp from a Share webapp -->
                        <moduleDependency>
                            <groupId>${alfresco.groupId}</groupId>
                            <artifactId>alfresco-share-services</artifactId>
                            <version>${alfresco.share.version}</version>
                            <type>amp</type>
                        </moduleDependency>
                        <!-- Bring in this JAR project, need to be included here, otherwise resources from META-INF
                             will not be loaded, such as the test.html page
                        -->
                        <moduleDependency>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>${project.artifactId}</artifactId>
                            <version>${project.version}</version>
                        </moduleDependency>
                    </platformModules>
                </configuration>
            </plugin>

            <!-- Build an AMP if 3rd party libs are needed by the extension -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>build-amp-file</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptor>src/main/assembly/amp.xml</descriptor>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.alfresco.maven.plugin</groupId>
                        <artifactId>alfresco-maven-plugin</artifactId>
                        <version>${alfresco.sdk.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- Hot reloading with JRebel -->
            <plugin>
                <groupId>org.zeroturnaround</groupId>
                <artifactId>jrebel-maven-plugin</artifactId>
                <version>${jrebel.version}</version>
                <executions>
                    <execution>
                        <id>generate-rebel-xml</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- For more information about how to configure JRebel plugin see:
                         http://manuals.zeroturnaround.com/jrebel/standalone/maven.html#maven-rebel-xml -->
                    <classpath>
                        <fallback>all</fallback>
                        <resources>
                            <resource />
                        </resources>
                    </classpath>

                    <!--
                      alwaysGenerate - default is false
                      If 'false' - rebel.xml is generated if timestamps of pom.xml and the current rebel.xml file are not equal.
                      If 'true' - rebel.xml will always be generated
                    -->
                    <alwaysGenerate>true</alwaysGenerate>
                </configuration>
            </plugin>
        </plugins>

        <resources>
            <!-- Filter the resource files in this project and do property substitutions -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <!-- Filter the test resource files in this project and do property substitutions -->
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
    </build>

    <!--
        Alfresco Maven Repositories
        -->
    <repositories>
        <repository>
            <id>alfresco-public</id>
            <url>https://artifacts.alfresco.com/nexus/content/groups/public</url>
        </repository>
        <repository>
            <id>alfresco-public-snapshots</id>
            <url>https://artifacts.alfresco.com/nexus/content/groups/public-snapshots</url>
            <snapshots>
                <updatePolicy>daily</updatePolicy>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>alfresco-plugin-public</id>
            <url>https://artifacts.alfresco.com/nexus/content/groups/public</url>
        </pluginRepository>
        <pluginRepository>
            <id>alfresco-plugin-public-snapshots</id>
            <url>https://artifacts.alfresco.com/nexus/content/groups/public-snapshots</url>
            <snapshots>
                <updatePolicy>daily</updatePolicy>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

</project>
